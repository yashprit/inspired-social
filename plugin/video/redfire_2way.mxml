<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
	backgroundColor="#DDDDDD"
    	paddingLeft="0"
    	paddingTop="0"
    	paddingBottom="0"
    	paddingRight="0"
    	xmlns:s="library://ns.adobe.com/flex/spark" 
    	xmlns:red5="*" 
	xmlns:mx="library://ns.adobe.com/flex/mx" minWidth="670" minHeight="480" creationComplete="initApplication()">
	
	<fx:Script source="redfire_video.as"/>
	
	<fx:Script> 
		<![CDATA[ 
		import flash.external.*;
		import flash.media.Camera;
		import flash.net.NetConnection;
		import flash.net.NetGroup;
		import flash.net.GroupSpecifier;
		import flash.net.Responder;	
		import flash.net.NetStream;	
		import flash.utils.Timer;		
		
		import mx.core.*;
		import mx.events.FlexEvent;
				
		private var videoWidth:int = 640;
		private var videoHeight:int = 480;
		
		private var streamYou:String = "YOU";		
		private var nsYou:NetStream;

		private var vidMe:Video = new Video();
		private var vidYou:Video = new Video();
			
		public function initApplication():void 
		{
			// Define handling for window close
			
			ExternalInterface.addCallback("windowCloseEvent", windowCloseEvent);

			// Initialise streaming parameters
			
			rtmpUrl		= FlexGlobals.topLevelApplication.parameters.rtmpUrl == null 	? rtmpUrl : 	FlexGlobals.topLevelApplication.parameters.rtmpUrl;
			rtmfpUrl	= FlexGlobals.topLevelApplication.parameters.rtmfpUrl == null 	? rtmfpUrl : 	FlexGlobals.topLevelApplication.parameters.rtmfpUrl;
			streamKey	= FlexGlobals.topLevelApplication.parameters.key == null 	? streamKey : 	FlexGlobals.topLevelApplication.parameters.key;
			streamMe	= FlexGlobals.topLevelApplication.parameters.streamMe == null 	? streamMe : 	FlexGlobals.topLevelApplication.parameters.streamMe;
			streamYou	= FlexGlobals.topLevelApplication.parameters.streamYou == null 	? streamYou : 	FlexGlobals.topLevelApplication.parameters.streamYou;

			videoPicQuality = FlexGlobals.topLevelApplication.parameters.videoPicQuality == null 	? videoPicQuality 	: FlexGlobals.topLevelApplication.parameters.videoPicQuality;
			videoFps	= FlexGlobals.topLevelApplication.parameters.videoFps == null 		? videoFps 		: FlexGlobals.topLevelApplication.parameters.videoFps;
			videoBandwidth 	= FlexGlobals.topLevelApplication.parameters.videoBandwidth == null 	? videoBandwidth 	: FlexGlobals.topLevelApplication.parameters.videoBandwidth;
			micSetRate	= FlexGlobals.topLevelApplication.parameters.micSetRate == null 	? micSetRate 		: FlexGlobals.topLevelApplication.parameters.micSetRate;

			setupConnection();				
		}
		
		
		public function windowCloseEvent():void 
		{
			disconnected();
		}

		private function connected():void
		{
			handleConnected();
			init2WayDisplay(nsYou, vidYou, video_uic, streamYou, vidMe);				
			
		}


		private function disconnected():void 
		{
			nsYou.play(false);
			nsMe.attachCamera(null);
			nsMe.attachAudio(null);	
			
			handleDisconnected();
		}


	]]> 
	</fx:Script>
	
	<red5:VideoObject id="video_uic" visible="false" twoWay="true"/>

	<s:Label x="10" y="650" id="DebugLabel"/>
</mx:Application>
