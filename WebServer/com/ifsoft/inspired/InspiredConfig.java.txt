package com.ifsoft.inspired;

import org.dom4j.*;

import org.jivesoftware.util.JiveGlobals;
import org.jivesoftware.util.Log;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.ServletOutputStream;

import java.io.*;
import java.util.*;

import java.util.Collection;
import java.util.logging.Level;
import java.util.logging.Logger;

public class InspiredConfig extends HttpServlet implements InspiredConstants {

	public static final long serialVersionUID = 24362462L;

	private String bandwidth = "25600";
	private String framesPerSec  = "15";
	private String picQuality = "0";
	private String micSetRate = "8";
	private String inspiredPhoneEnabled = "true";
	private String inspiredName	= "itrader";
	private String inspiredURL	= "rtmp:/oflaDemo";
	private String startSIPPort	= "5070";
	private String endSIPPort	= "5099";
	private String startRTPPort	= "3000";
	private String endRTPPort	= "3099";
	private String codecADPCM	= "no";
	private String inspiredAsteriskEnabled = "true";
	private String asteriskHost = "";
	private String asteriskUsername = "";
	private String asteriskPassword = "";

	public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

		response.setHeader("Expires", "Sat, 6 May 1995 12:00:00 GMT");
		response.setHeader("Cache-Control", "no-store, no-cache, must-revalidate");
		response.addHeader("Cache-Control", "post-check=0, pre-check=0");
		response.setHeader("Pragma", "no-cache");
		response.setHeader("Content-Type", "text/html");
		response.setHeader("Connection", "close");

		ServletOutputStream out = response.getOutputStream();

		String action = request.getParameter("action");

		if (action !=null) {

			if ("update".equals(action)) {
				inspiredPhoneEnabled = request.getParameter("inspiredPhoneEnabled");
				bandwidth = request.getParameter("bandwidth");
				framesPerSec = request.getParameter("framesPerSec");
				picQuality = request.getParameter("picQuality");
				micSetRate = request.getParameter("micSetRate");
				inspiredURL = request.getParameter("inspiredURL");
				inspiredName = request.getParameter("inspiredName");

				startSIPPort = request.getParameter("startSIPPort");
				endSIPPort = request.getParameter("endSIPPort");
				startRTPPort = request.getParameter("startRTPPort");
				endRTPPort = request.getParameter("endRTPPort");
				codecADPCM = request.getParameter("codecADPCM");


				inspiredAsteriskEnabled = request.getParameter("inspiredAsteriskEnabled");
				asteriskHost = request.getParameter("asteriskHost");
				asteriskUsername = request.getParameter("asteriskUsername");
				asteriskPassword = request.getParameter("asteriskPassword");

				JiveGlobals.setProperty(Properties.RED5_PHONE_ENABLED, "true".equals(inspiredPhoneEnabled) ? "TRUE" : "FALSE");
				JiveGlobals.setProperty(Properties.RED5_BANDWIDTH, bandwidth);
				JiveGlobals.setProperty(Properties.RED5_PIC_QUALITY, picQuality);
				JiveGlobals.setProperty(Properties.RED5_FAMES_PER_SEC, framesPerSec);
				JiveGlobals.setProperty(Properties.RED5_MIC_SET_RATE, micSetRate);
		 		JiveGlobals.setProperty(Properties.RED5_URL, inspiredURL);
		 		JiveGlobals.setProperty(Properties.RED5_PLUGIN_NAME, inspiredName);

		 		JiveGlobals.setProperty(Properties.RED5_START_SIP_PORT, startSIPPort);
		 		JiveGlobals.setProperty(Properties.RED5_END_SIP_PORT, endSIPPort);
		 		JiveGlobals.setProperty(Properties.RED5_START_RTP_PORT, startRTPPort);
		 		JiveGlobals.setProperty(Properties.RED5_END_RTP_PORT, endRTPPort);

		 		JiveGlobals.setProperty(Properties.RED5_CODEC_ADPCM, codecADPCM);

				JiveGlobals.setProperty(Properties.RED5_ASTERISK_ENABLED, "true".equals(inspiredAsteriskEnabled) ? "TRUE" : "FALSE");
		 		JiveGlobals.setProperty(Properties.RED5_ASTERISK_HOST, asteriskHost);
				JiveGlobals.setProperty(Properties.RED5_ASTERISK_USERNAME, asteriskUsername);
				JiveGlobals.setProperty(Properties.RED5_ASTERISK_PASSWORD, asteriskPassword);
			}
		}

		displayPage(out);
	}



	private void displayPage(ServletOutputStream out) {

		bandwidth = JiveGlobals.getProperty(Properties.RED5_BANDWIDTH, "25600");
		picQuality = JiveGlobals.getProperty(Properties.RED5_PIC_QUALITY, "0");
		framesPerSec = JiveGlobals.getProperty(Properties.RED5_FAMES_PER_SEC, "15");
		micSetRate =  JiveGlobals.getProperty(Properties.RED5_MIC_SET_RATE, "8");
		inspiredURL =  JiveGlobals.getProperty(Properties.RED5_URL, "rtmp:/oflaDemo");
		inspiredName =  JiveGlobals.getProperty(Properties.RED5_PLUGIN_NAME, "itrader");

		startSIPPort = JiveGlobals.getProperty(Properties.RED5_START_SIP_PORT, "5070");
		endSIPPort = JiveGlobals.getProperty(Properties.RED5_END_SIP_PORT, "5099");
		startRTPPort = JiveGlobals.getProperty(Properties.RED5_START_RTP_PORT, "3000");
		endRTPPort = JiveGlobals.getProperty(Properties.RED5_END_RTP_PORT, "3029");

		codecADPCM = JiveGlobals.getProperty(Properties.RED5_CODEC_ADPCM, "no");

		asteriskHost = JiveGlobals.getProperty(Properties.RED5_ASTERISK_HOST, "");
		asteriskUsername = JiveGlobals.getProperty(Properties.RED5_ASTERISK_USERNAME, "");
		asteriskPassword = JiveGlobals.getProperty(Properties.RED5_ASTERISK_PASSWORD, "");


        try {
			out.println("");
			out.println("<html>");
			out.println("    <head>");
			out.println("        <title>iTrader Properties</title>");
			out.println("        <meta name=\"pageID\" content=\"itrader-props-edit-form\"/>");
			out.println("        <link rel=\"stylesheet\" type=\"text/css\" href=\"/style/global.css\"/>");
			out.println("    </head>");
			out.println("    <body>");
			out.println("");
			out.println("Use the form below to edit iTrader Properties.<br>");
			out.println("</p>");
			out.println("<form action=\"conf\" method=\"get\">");
			out.println("<input type='hidden' name='action' value='update'>");
			out.println("");
			//out.println("<br><br>");
			out.println("<div class=\"jive-contentBoxHeader\">General</div>");
			out.println("<div class=\"jive-contentBox\">");
			out.println("	 <table>");
			out.println("	 	<tr><td>Name</td><td><input type='text' name='inspiredName' value='" + inspiredName + "'></td>");
			out.println("	 		<td>Change the web application root name. You must restart the plugin if you change this name.</td></tr>");
			out.println("	 	<tr><td>URL</td><td><input size='50' type='text' name='inspiredURL' value='" + inspiredURL + "'></td>");
			out.println("	 		<td>The Flash Netconnection URL. Use rtmp for default port 1935 or use rtmpt to tunnel over http default port 80.<p><i>Don't change this unless you know what you are doing.</i></td></tr>");
			out.println("	 </table>");
			out.println("");
			out.println("</div>");
			out.println("&nbsp;<p/>");
			out.println("");
			out.println("&nbsp;<p/>");
			out.println("<div class=\"jive-contentBoxHeader\">Video Parameters</div>");
			out.println("<div class=\"jive-contentBox\">");
			out.println("	 <table>");
			out.println("	 	<tr><td>Bandwidth</td><td><input type='text' name='bandwidth' value='" + bandwidth + "'></td>");
			out.println("	 		<td>Camera bandwidth (in bytes per second)</td></tr>");
			out.println("	 	<tr><td>Frames/Sec</td><td><input type='text' name='framesPerSec' value='" + framesPerSec + "'></td>");
			out.println("	 		<td><p/>The number of frames per second that will be captured by the camera</td></tr>");
			out.println("	 	<tr><td>Picture Quality</td><td><input type='text' name='picQuality' value='" + picQuality + "'></td>");
			out.println("	 		<td>Camera picture quality: a value between 0 and 1, where 1 represents the highest quality (no compression). When 0 is passed, this indicates to use highest quality that fits into the available bandwidth</td></tr>");
			out.println("	 </table>");
			out.println("");
			out.println("</div>");
			out.println("");
			out.println("&nbsp;<p/>");
			out.println("<div class=\"jive-contentBoxHeader\">Audio Parameters</div>");
			out.println("<div class=\"jive-contentBox\">");
			out.println("	 <table>");
			out.println("	 	<tr><td>Microphone sample rate</td><td><input type='text' name='micSetRate' value='" + micSetRate + "'></td>");
			out.println("	 		<td>The rate at which the microphone should capture sound, in kHz. Acceptable values are 5, 8, 11, 22, and 44</td></tr>");
			out.println("	 </table>");
			out.println("");
			out.println("</div>");
			out.println("");
			out.println("&nbsp;<p/>");
			out.println("<div class=\"jive-contentBoxHeader\">SIP Parameters</div>");
			out.println("<div class=\"jive-contentBox\">");
			out.println("	 <table>");
			out.println("	 	<tr><td>Start SIP Port</td><td><input type='text' name='startSIPPort' value='" + startSIPPort + "'></td>");
			out.println("	 		<td>The start ot the range of ports to be allocated for SIP clients. The start and end port numbers determine how many active clients can be supported. Restart Openfire if you change this.</td></tr>");
			out.println("	 	<tr><td>End SIP Port</td><td><input type='text' name='endSIPPort' value='" + endSIPPort + "'></td>");
			out.println("	 		<td>The end the range of ports to be allocated for SIP clients. The start and end port numbers determine how many active clients can be supported. Restart Openfire if you change this.</td></tr>");
			out.println("	 	<tr><td>Start RTP Port</td><td><input type='text' name='startRTPPort' value='" + startRTPPort + "'></td>");
			out.println("	 		<td>The start ot the range of RTP audio ports to be allocated for SIP clients. The start and end audio port numbers determine how many active clients can be supported. Restart Openfire if you change this.</td></tr>");
			out.println("	 	<tr><td>End RTP Port</td><td><input type='text' name='endRTPPort' value='" + endRTPPort + "'></td>");
			out.println("	 		<td>The end the range of ports to be allocated for SIP clients. The start and end audio port numbers determine how many active clients can be supported. Restart Openfire if you change this.</td></tr>");
			out.println("	 	<tr><td>Use Audio Compression</td><td><input type='text' name='codecADPCM' value='" + codecADPCM + "'></td>");
			out.println("	 		<td>Specify if Audio compression should be used. It improves bandwidth, but degrades the voice quality.</td></tr>");
			out.println("	 </table>");
			out.println("");
			out.println("</div>");
			out.println("");
			out.println("&nbsp;<p/>");
			out.println("<div class=\"jive-contentBoxHeader\">Asterisk PBX Parameters</div>");
			out.println("<div class=\"jive-contentBox\">");
			out.println("	 <table>");
			out.println("        <tr>");
			out.println("            <td width=\"1%\">");
			out.println("            <input type=\"radio\" name=\"inspiredAsteriskEnabled\" value=\"true\" id=\"rb03\"");

			if(JiveGlobals.getBooleanProperty(Properties.RED5_ASTERISK_ENABLED, false)) {
				out.println("            checked");
			}

			out.println("            >");
			out.println("            </td>");
			out.println("            <td  colspan='2' width=\"99%\">");
			out.println("                <label for=\"rb03\"><b>Enabled</b></label> - iTrader will connect to Asterisk Server");
			out.println("            </td>");
			out.println("        </tr>");
			out.println("        <tr>");
			out.println("            <td width=\"1%\">");
			out.println("            <input type=\"radio\" name=\"inspiredAsteriskEnabled\" value=\"false\" id=\"rb04\"");

			if(!JiveGlobals.getBooleanProperty(Properties.RED5_ASTERISK_ENABLED, false)) {
				out.println("            checked");
			}
			out.println("            >");
			out.println("            </td>");
			out.println("            <td  colspan='2' width=\"99%\">");
			out.println("                <label for=\"rb04\"><b>Disabled</b></label> - iTrader will NOT connect to Asterisk Server");
			out.println("            </td>");
			out.println("        </tr>");
			out.println("	 	<tr><td>Server Host Name</td><td><input type='text' name='asteriskHost' value='" + asteriskHost + "'></td>");
			out.println("	 		<td>The host name or IP address of your Asterisk PBX server to be used for voicemail and other PBX features</td></tr>");
			out.println("	 	<tr><td>Username</td><td><input type='text' name='asteriskUsername' value='" + asteriskUsername + "'></td>");
			out.println("	 		<td>The username  name to connect to Asterisk</td></tr>");
			out.println("	 	<tr><td>Password</td><td><input type='password' name='asteriskPassword' value='" + asteriskPassword + "'></td>");
			out.println("	 		<td>The password to be used with username</td></tr>");
			out.println("	 </table>");
			out.println("");
			out.println("</div>");
			out.println("");
			out.println("&nbsp;<p/>&nbsp;<p/><input type=\"submit\" value=\"Save Properties\">");
			out.println("</form>");
			out.println("");
			out.println("</body>");
			out.println("</html>");
        }
        catch (Exception e) {
            Log.error(e);
        }
	}
}
